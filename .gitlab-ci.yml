default:
  retry: 2
  image:
    name: $KANIKO_IMAGE
    entrypoint: [""]
  tags:
    - ord1-tenant

stages:
  - build

variables:
  KANIKO_IMAGE: gcr.io/kaniko-project/executor:debug

gen-version:
  stage: build
  rules:
    - if: '$CI_COMMIT_BRANCH != "master" && $CI_COMMIT_TAG == null'
  image: ubuntu:noble
  script:
    - echo "GOLANG_VERSION=$(${CI_PROJECT_DIR}/hack/golang-version.sh)" > build.env
  artifacts:
    reports:
      dotenv: build.env

build:
  stage: build
  needs: ["gen-version"]
  rules:
    - if: '$CI_COMMIT_BRANCH != "master" && $CI_COMMIT_TAG == null'
  before_script:
    - export HTTP_PROXY=${REGPROXY_URI}
    - export HTTPS_PROXY=${REGPROXY_URI}
    - export GOLANG_VERSION=${GOLANG_VERSION}
    - mkdir -p /etc/ssl/certs/ && cat /etc/gitlab-runner/certs/proxy-ca.crt >> /etc/ssl/certs/ca-certificates.crt
    - mkdir -p /kaniko/.docker
    - >-
      echo "{\"auths\":{\"${CI_REGISTRY}\":{\"auth\":\"$(printf "%s:%s" "${CI_REGISTRY_USER}" "${CI_REGISTRY_PASSWORD}" | base64 | tr -d '\n')\"},
        \"docker.io\":{\"auth\":\"$(printf "%s:%s" "${DOCKERHUB_USERNAME}" "${DOCKERHUB_PASSWORD}" | base64 | tr -d '\n')\"}}}" > /kaniko/.docker/config.json
  script:
    - /kaniko/executor $KANIKO_ADDTL_ARGS
      --context "${CI_PROJECT_DIR}"
      --dockerfile "${CI_PROJECT_DIR}/deployments/container/Dockerfile.ubuntu"
      --destination "${CI_REGISTRY_IMAGE}:${CI_COMMIT_REF_SLUG}-${CI_COMMIT_SHORT_SHA}"
      --build-arg GOLANG_VERSION=${GOLANG_VERSION}
